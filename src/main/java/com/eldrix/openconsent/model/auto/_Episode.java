package com.eldrix.openconsent.model.auto;

import java.time.LocalDate;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.eldrix.openconsent.model.PermissionForm;
import com.eldrix.openconsent.model.Project;

/**
 * Class _Episode was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Episode extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<LocalDate> DATE_REGISTRATION = Property.create("dateRegistration", LocalDate.class);
    public static final Property<String> PATIENT_AUTHORITY_PSEUDONYM = Property.create("patientAuthorityPseudonym", String.class);
    public static final Property<String> PATIENT_PSEUDONYM = Property.create("patientPseudonym", String.class);
    public static final Property<List<PermissionForm>> PERMISSION_FORMS = Property.create("permissionForms", List.class);
    public static final Property<Project> PROJECT = Property.create("project", Project.class);

    public void setDateRegistration(LocalDate dateRegistration) {
        writeProperty("dateRegistration", dateRegistration);
    }
    public LocalDate getDateRegistration() {
        return (LocalDate)readProperty("dateRegistration");
    }

    public void setPatientAuthorityPseudonym(String patientAuthorityPseudonym) {
        writeProperty("patientAuthorityPseudonym", patientAuthorityPseudonym);
    }
    public String getPatientAuthorityPseudonym() {
        return (String)readProperty("patientAuthorityPseudonym");
    }

    public void setPatientPseudonym(String patientPseudonym) {
        writeProperty("patientPseudonym", patientPseudonym);
    }
    public String getPatientPseudonym() {
        return (String)readProperty("patientPseudonym");
    }

    public void addToPermissionForms(PermissionForm obj) {
        addToManyTarget("permissionForms", obj, true);
    }
    public void removeFromPermissionForms(PermissionForm obj) {
        removeToManyTarget("permissionForms", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PermissionForm> getPermissionForms() {
        return (List<PermissionForm>)readProperty("permissionForms");
    }


    public void setProject(Project project) {
        setToOneTarget("project", project, true);
    }

    public Project getProject() {
        return (Project)readProperty("project");
    }


}
